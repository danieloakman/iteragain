name: Release & Publish

on:
  push:
    tags: ['v*.*.*']

# Define strategy and matrix at the top level
strategy:
  matrix:
    node-version: [20]
    pnpm-version: [9]

jobs:
  build:
    runs-on: ubuntu-latest
    # Reference the top-level strategy
    strategy: ${{ toJson(strategy) }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Install Dependencies üì•
        run: |
          pnpm i
      - name: Build üõ†Ô∏è
        run: pnpm build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist
            CHANGELOG.md

  github-release:
    needs: build
    runs-on: ubuntu-latest
    # Reference the top-level strategy
    strategy: ${{ toJson(strategy) }}
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Create Release Package
        run: |
          npm pack
          mv iteragain-*.tgz package.tgz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # TODO: Set `prerelease: true` if the tag is not a stable release.
          files: |
            package.tgz
            CHANGELOG.md

  npm-publish:
    needs: build
    runs-on: ubuntu-latest
    # Reference the top-level strategy
    strategy: ${{ toJson(strategy) }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  jsr-publish:
    needs: build
    runs-on: ubuntu-latest
    # Reference the top-level strategy
    strategy: ${{ toJson(strategy) }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Publish to JSR
        run: npx jsr publish
